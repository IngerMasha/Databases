TRUNCATE TABLE items RESTART IDENTITY;
TRUNCATE TABLE customers RESTART IDENTITY;

CREATE TABLE IF NOT EXISTS items (
    item_id SERIAL PRIMARY KEY,
    item_name VARCHAR(100),
    price NUMERIC
);

CREATE TABLE IF NOT EXISTS customers (
    customer_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50)
);

INSERT INTO items (item_name, price) VALUES
('Small Desk', 100),
('Large Desk', 300),
('Fan', 80);

INSERT INTO customers (first_name, last_name) VALUES
('Greg', 'Jones'),
('Sandra', 'Jones'),
('Scott', 'Scott'),
('Trevor', 'Green'),
('Melanie', 'Johnson');

SELECT * FROM items;

SELECT * FROM items WHERE price > 80;

SELECT * FROM items WHERE price <= 300;

SELECT * FROM customers WHERE last_name = 'Smith';

SELECT * FROM customers WHERE last_name = 'Jones';

SELECT * FROM customers WHERE first_name != 'Scott';

---All items, ordered by price (lowest to highest).
SELECT *
FROM public.items
ORDER BY price ASC;
---Items with a price above 80 (80 included), ordered by price (highest to lowest).
SELECT *
FROM public.items
WHERE price >= 80
ORDER BY price DESC;
---The first 3 customers in alphabetical order of the first name (A-Z) â€“ exclude the primary key column from the results.
SELECT first_name, last_name
FROM public.customers
ORDER BY first_name ASC
LIMIT 3;
---All last names (no other columns!), in reverse alphabetical order (Z-A)
SELECT last_name
FROM public.customers
ORDER BY last_name DESC;



